data(cars)
?cars
head(cars)
plot(cars)
?plot
plot(x = cars$speed, y = cars$dist)
plot(x = cars$dist, y = cars$spped)
plot(x = cars$dist, y = cars$speed)
plot(x = cars$speed, y = cars$dist,xlab="Speed")
plot(x = cars$speed, y = cars$dist,xlab="Speed",ylab="Stopping Distance")
plot(x = cars$speed, y = cars$dist,ylab="Stopping Distance")
plot(x = cars$speed, y = cars$dist,xlab="Speed",ylab="Stopping Distance")
plot(x = cars$speed, y = cars$dist,main="My Plot")
plot(cars,main="My Plot")
plot(cars,subMy Plot Subtitle="My Plot")
plot(cars,sub="My PLot Subtitle")
plot(cars,sub="My Plot Subtitle")
plot(cars, col="red")
plot(cars, col = 2)
plot(cars,xlim = c(10, 15))
plot(cars,type=pch
)
plot(cars,type="pch")
plot(cars, pch = 2)
load(mtcars)
data(cars)
data(mtcars)
play()
dim(mtcars)
head(mtcars)
summary(mtcars)
nxt()
?boxplot
boxplot(formula = mpg ~ cyl,data = mtcars)
hist( mtcars$mpg)
q()
q()
?n
library(httr)
install.packages("httr")
myapp<-oauth_app("github",key="e86ce0cc2b0211ccada7" secret="9acca9c66de0d883547f91562235ce8b0ac25adb")
q()
injstall.packages("httr")
install.packages("httr")
library(httr)
myapp<-oauth_app("github",key="e86ce0cc2b0211ccada7" secret="9acca9c66de0d883547f91562235ce8b0ac25adb")
oauth_endpoints("github")
myapp <- oauth_app("github", "e86ce0cc2b0211ccada7")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
gtoken <- config(token = github_token)
req <- GET("req <- GET("https://api.github.com/rate_limit", gtoken)", gtoken)
req <- GET("https://api.github.com/users/jtleek/repos", gtoken)
stop_for_status(req)
content(req)
req
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
gtoken <- config(token = github_token)
myapp <- oauth_app("github", "e86ce0cc2b0211ccada7","9acca9c66de0d883547f91562235ce8b0ac25adb")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
install.packages("httpuv")
library(httpuv)
myapp <- oauth_app("github", "e86ce0cc2b0211ccada7","9acca9c66de0d883547f91562235ce8b0ac25adb")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
gtoken <- config(token = github_token)
req <- GET("https://api.github.com/users/jtleek/repos", gtoken)
req
myapp <- oauth_app("github", "abf805b3137e435f58c6","072222b0e72ff2be6cc47828cb462d080325846e")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
q()
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
myapp <- oauth_app("github", "abf805b3137e435f58c6","072222b0e72ff2be6cc47828cb462d080325846e")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
myapp <- oauth_app("github", "0bcc8801bb1ede904b10","732c60fd878bb08c620de1789c8c0bb4d1288b9c")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
c
myapp <- oauth_app("github", "0bcc8801bb1ede904b10","732c60fd878bb08c620de1789c8c0bb4d1288b9c")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
myapp <- oauth_app("github", "0bcc8801bb1ede904b10","732c60fd878bb08c620de1789c8c0bb4d1288b9c")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
gtoken <- config(token = github_token)
req <- GET("https://api.github.com/users/jtleek/repos", gtoken)
install.packages("httr")
library(httr)
req <- GET("https://api.github.com/users/jtleek/repos", gtoken)
q()
install.packages("httr")
library(httr)
oauth_endpoints("github")
myapp <- oauth_app("github", "0bcc8801bb1ede904b10")
myapp <- oauth_app("github", "0bcc8801bb1ede904b10","732c60fd878bb08c620de1789c8c0bb4d1288b9c")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
gtoken <- config(token = github_token)
req <- GET("https://api.github.com/users/jtleek/repos", gtoken)
req
install.packages("rjson")
library(rjson)
json1=content(req)
json1
json2=jsonlite::fromJSON(toJSON(json1))
json2
json3=content(req)
json4=jsonlite::fromJSON(toJSON(json3))
datasharingInfo<-json2[json2[,id]==14204342]
class(json2)
datasharingInfo<-json2[,id]==14204342]
datasharingInfo<-json2[,id==14204342]
dim(json2)
head(json2)
datasharingInfo<-json2[id==14204342,]
datasharingInfo<-json2[id==14204342,]
install.packages("dplr")
install.packages("dplR")
library(dplR)
cran <- tbl_df(json2)
install.packages("dplR")
library(dplR)
cran <- tbl_df(json2)
q()
install.packages("sqldf")
setInternet2()
chooseCRANmirror()
install.packages("sqldf")
library(sqldf)
acs<-read.csv("C:/DataScience/module 3/week 2/quiz/getdata_data_ss06pid.csv")
acs<-read.csv("C:/DataScience/module 3/week 2/quiz/getdata-data-ss06pid.csv")
select pwgtp1 from acs where AGEP < 50
select * from acs where AGEP < 50"
sqldf("select * from acs")
sqldf("select pwgtp1 from acs where AGEP < 50")
sqldf("select * from acs where AGEP < 50")
unique(acs$AGEP)
head(acs)
head(acs)
unique(acs$AGEP)
test1<-sqldf("select unique AGEP from acs")
t2<-sqldf("select distinct pwgtp1 from acs")
t2
t3<-sqldf("select distinct AGEP from acs")
t3
install.packages("httr")
library(httr)
q()
install.packages("httr")
library(httr)
url<-"http://biostat.jhsph.edu/~jleek/contact.html"
con=url(url)
htmlcode=readLines(con)
close(con)
htmlcode
htmlcode[10]
t1<-nchars(htmlcode[10]
)
t1<-nchar(htmlcode[10])
t1
t1<-nchar(htmlcode[20])
t1
t1<-nchar(htmlcode[30])
t1
t1<-nchar(htmlcode[100])
t1
q()
url="https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for"
url
x <- read.fwf(
file=url("http://www.cpc.ncep.noaa.gov/data/indices/wksst8110.for"),
skip=4,
widths=c(12, 7,4, 9,4, 9,4, 9,4))
head(x)
x
class(x)
sum(x$V4)
sum(x$V()
9)
sum(x$V9)
head(x)
file=url("http://www.cpc.ncep.noaa.gov/data/indices/wksst8110.for"),
x <- read.fwf(
file=url("http://www.cpc.ncep.noaa.gov/data/indices/wksst8110.for"),
skip=4,
widths=c(10, 7,4, 9,4, 9,4, 9,4))
x
head(x)
x <- read.fwf(
file=url("http://www.cpc.ncep.noaa.gov/data/indices/wksst8110.for"),
skip=4,
widths=c(10, 5,4, 9,4, 9,4, 9,4))
head(x)
x <- read.fwf(
)
x <- read.fwf(
file=url("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for"),
skip=4,
widths=c(12, 7,4, 9,4, 9,4, 9,4))
x <- read.fwf(
file=url("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for",
skip=4,
widths=c(12, 7,4, 9,4, 9,4, 9,4))
)
x <- read.fwf(
file=url("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for"),
skip=4,
widths=c(12, 7,4, 9,4, 9,4, 9,4))
q()
quiz1 <- function() {
install.packages("dplyr")
library(dplyr)
if(!file.exists ("C:/DataScience/module 3/week3/quizcode")){
dir.create (("C:/DataScience/module 3/week3/quizcode"))
}
fileURL="https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv"
file.download(fileURL,"C:/DataScience/module 3/week3/quizcode/data.csv")
data<-read.csv("C:/DataScience/module 3/week3/quizcode/data.csv")
head(data)
}
quiz1()
quiz1 <- function() {
if (!require("dplyr")) {
install.packages("dplyr")
}
require("dplyr")
if(!file.exists ("C:/DataScience/module 3/week3/quizcode")){
dir.create (("C:/DataScience/module 3/week3/quizcode"))
}
fileURL="https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv"
file.download(fileURL,"C:/DataScience/module 3/week3/quizcode/data.csv")
data<-read.csv("C:/DataScience/module 3/week3/quizcode/data.csv")
head(data)
}
quiz1()
quiz1 <- function() {
if (!require("dplyr")) {
install.packages("dplyR")
}
require("dplyR")
if(!file.exists ("C:/DataScience/module 3/week3/quizcode")){
dir.create (("C:/DataScience/module 3/week3/quizcode"))
}
fileURL="https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv"
file.download(fileURL,"C:/DataScience/module 3/week3/quizcode/data.csv")
data<-read.csv("C:/DataScience/module 3/week3/quizcode/data.csv")
head(data)
}
quiz1()
power_consumption_plotting <- function() {
if(!file.exists ("C:/DataScience/module 4/week1")){
dir.create (("C:/DataScience/module 4/week1"))
}
saved_file<-"C:/DataScience/module 4/week1/exdata-data-household_power_consumption.zip"
if(!file.exists(saved_file)){
fileURL="https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2Fhousehold_power_consumption.zip"
download.file(fileURL,saved_file)
file<-unzip(saved_file)
unlink(saved_file)
}else{
file<-unzip(saved_file)
}
#read the data files into a data frame
data<-read.table(file, sep = ";", header = T, na.strings = "?")
#data$Datetime <- strptime(paste(data$Date, data$Time), "%d/%m/%Y %H:%M:%S")
#head(data)
#subset the data into the frame by date
#dataframe <- data[(data$Date=="2007-02-01") | (data$Date=="2007-02-02"),]
}
power_consumption_plotting <- function() {
if(!file.exists ("C:/DataScience/module 4/week1")){
dir.create (("C:/DataScience/module 4/week1"))
}
saved_file<-"C:/DataScience/module 4/week1/exdata-data-household_power_consumption.zip"
if(!file.exists(saved_file)){
fileURL="https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2Fhousehold_power_consumption.zip"
download.file(fileURL,saved_file)
file<-unzip(saved_file)
unlink(saved_file)
}else{
file<-unzip(saved_file)
}
#read the data files into a data frame
data<-read.table(file, sep = ";", header = T, na.strings = "?")
#data$Datetime <- strptime(paste(data$Date, data$Time), "%d/%m/%Y %H:%M:%S")
#head(data)
#subset the data into the frame by date
#dataframe <- data[(data$Date=="2007-02-01") | (data$Date=="2007-02-02"),]
}
power_consumption_plotting()
head(data)
power_consumption_plotting <- function() {
if(!file.exists ("C:/DataScience/module 4/week1")){
dir.create (("C:/DataScience/module 4/week1"))
}
saved_file<-"C:/DataScience/module 4/week1/exdata-data-household_power_consumption.zip"
if(!file.exists(saved_file)){
fileURL="https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2Fhousehold_power_consumption.zip"
download.file(fileURL,saved_file)
file<-unzip(saved_file)
unlink(saved_file)
}else{
file<-unzip(saved_file)
}
#read the data files into a data frame
data<-read.table(file, sep = ";", header = T, na.strings = "?")
head(data)
#data$Datetime <- strptime(paste(data$Date, data$Time), "%d/%m/%Y %H:%M:%S")
#head(data)
#subset the data into the frame by date
#dataframe <- data[(data$Date=="2007-02-01") | (data$Date=="2007-02-02"),]
}
power_consumption_plotting()
power_consumption_plotting <- function() {
if(!file.exists ("C:/DataScience/module 4/week1")){
dir.create (("C:/DataScience/module 4/week1"))
}
saved_file<-"C:/DataScience/module 4/week1/exdata-data-household_power_consumption.zip"
if(!file.exists(saved_file)){
fileURL="https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2Fhousehold_power_consumption.zip"
download.file(fileURL,saved_file)
file<-unzip(saved_file)
unlink(saved_file)
}else{
file<-unzip(saved_file)
}
#read the data files into a data frame
data<-read.table(file, sep = ";", header = T, na.strings = "?")
#Date and Time variables to Date/Time classes in
#R using the strptime() and as.Date() functions
as.Date(data$Date, "%m/%d/%y")
strptime(data$Time, "%H:%M:%S")
#subset the data into the frame by date
dataframe <- data[(data$Date=="2007-02-01") | (data$Date=="2007-02-02"),]
head(dataframe)
}
power_consumption_plotting()
plot3 <- function() {
if (!require("sqldf")) {
install.packages("sqldf")
}
require("sqldf")
if (!require("tcltk2")) {
install.packages("tcltk2")
}
require("tcltk2")
file<-"household_power_consumption.txt"
mySql <- "select * from file where Date in ('1/2/2007','2/2/2007')"
householdpower <-read.csv.sql(file,sql = mySql,header=T,sep=";")
householdpower$Date <- as.Date(householdpower$Date, format="%d/%m/%Y")
householdpower$Global_active_power<-as.numeric(as.character(householdpower$Global_active_power))
householdpower$Global_reactive_power<-as.numeric(as.character(householdpower$Global_reactive_power))
householdpower$Voltage<-as.numeric(as.character(householdpower$Voltage))
householdpower$Global_intensity<-as.numeric(as.character(householdpower$Global_intensity))
householdpower$Sub_metering_1<-as.numeric(as.character(householdpower$Sub_metering_1))
householdpower$Sub_metering_2<-as.numeric(as.character(householdpower$Sub_metering_2))
householdpower$Sub_metering_3<-as.numeric(as.character(householdpower$Sub_metering_3))
householdpower[,'timestamp'] <-as.POSIXct(paste(householdpower$Date, householdpower$Time), format="%Y-%m-%d %H:%M:%S")
with(householdpower, plot(householdpower$timestamp, householdpower$Sub_metering_1, type = "n",
ylab="Energy Sub Metering",xlab=" "))
with(householdpower, lines(householdpower$timestamp, householdpower$Sub_metering_1, col = "black"))
with(householdpower, lines(householdpower$timestamp, householdpower$Sub_metering_2, col = "red"))
with(householdpower, lines(householdpower$timestamp, householdpower$Sub_metering_3, col = "blue"))
legend( "topright",c("Sub_metering_1","Sub_metering_2","Sub_metering_3"),
cex=.6,lty =lty=c(1,1), col=c("black","red","blue"))
dev.copy(png, file="plot3.png", width=500, height=500)
dev.off()
}
plot4 <- function() {
if (!require("sqldf")) {
install.packages("sqldf")
}
require("sqldf")
if (!require("tcltk2")) {
install.packages("tcltk2")
}
require("tcltk2")
file<-"household_power_consumption.txt"
mySql <- "select * from file where Date in ('1/2/2007','2/2/2007')"
householdpower <-read.csv.sql(file,sql = mySql,header=T,sep=";")
householdpower$Date <- as.Date(householdpower$Date, format="%d/%m/%Y")
householdpower$Global_active_power<-as.numeric(as.character(householdpower$Global_active_power))
householdpower$Global_reactive_power<-as.numeric(as.character(householdpower$Global_reactive_power))
householdpower$Voltage<-as.numeric(as.character(householdpower$Voltage))
householdpower$Global_intensity<-as.numeric(as.character(householdpower$Global_intensity))
householdpower$Sub_metering_1<-as.numeric(as.character(householdpower$Sub_metering_1))
householdpower$Sub_metering_2<-as.numeric(as.character(householdpower$Sub_metering_2))
householdpower$Sub_metering_3<-as.numeric(as.character(householdpower$Sub_metering_3))
householdpower[,'timestamp'] <-as.POSIXct(paste(householdpower$Date, householdpower$Time), format="%Y-%m-%d %H:%M:%S")
old.par <- par(mfrow=c(2, 2))
#plot Global Active Power (kilowatts)
plot(householdpower$timestamp,householdpower$Global_active_power,
ylab="Global Active Power (kilowatts)",xlab=" ",pch=".")
lines(householdpower$timestamp,householdpower$Global_active_power, type="l")
#plot Voltage
plot(householdpower$timestamp,householdpower$Voltage,
ylab="Voltage",xlab=" ",pch=".")
lines(householdpower$timestamp,householdpower$Voltage, type="l")
#plot Energy Sub Metering
with(householdpower, plot(householdpower$timestamp, householdpower$Sub_metering_1, type = "n",
ylab="Energy Sub Metering",xlab=" "))
with(householdpower, lines(householdpower$timestamp, householdpower$Sub_metering_1, col = "black"))
with(householdpower, lines(householdpower$timestamp, householdpower$Sub_metering_2, col = "red"))
with(householdpower, lines(householdpower$timestamp, householdpower$Sub_metering_3, col = "blue"))
legend(x="topright",c("Sub_metering_1","Sub_metering_2","Sub_metering_3"),
cex=.5,lty=c(1,1), col=c("black","red","blue"),bty = "n")
#plot Global Reactive Power
plot(householdpower$timestamp,householdpower$Global_reactive_power,
ylab="Global Reactive Power",xlab=" Date Time ",pch=".")
lines(householdpower$timestamp,householdpower$Global_reactive_power, type="l")
dev.copy(png, file="plot4.png", width=600, height=600)
dev.off()
}
plot4()
plot4 <- function() {
if (!require("sqldf")) {
install.packages("sqldf")
}
require("sqldf")
if (!require("tcltk2")) {
install.packages("tcltk2")
}
require("tcltk2")
file<-"household_power_consumption.txt"
mySql <- "select * from file where Date in ('1/2/2007','2/2/2007')"
householdpower <-read.csv.sql(file,sql = mySql,header=T,sep=";")
householdpower$Date <- as.Date(householdpower$Date, format="%d/%m/%Y")
householdpower$Global_active_power<-as.numeric(as.character(householdpower$Global_active_power))
householdpower$Global_reactive_power<-as.numeric(as.character(householdpower$Global_reactive_power))
householdpower$Voltage<-as.numeric(as.character(householdpower$Voltage))
householdpower$Global_intensity<-as.numeric(as.character(householdpower$Global_intensity))
householdpower$Sub_metering_1<-as.numeric(as.character(householdpower$Sub_metering_1))
householdpower$Sub_metering_2<-as.numeric(as.character(householdpower$Sub_metering_2))
householdpower$Sub_metering_3<-as.numeric(as.character(householdpower$Sub_metering_3))
householdpower[,'timestamp'] <-as.POSIXct(paste(householdpower$Date, householdpower$Time), format="%Y-%m-%d %H:%M:%S")
old.par <- par(mfrow=c(2, 2))
#plot Global Active Power (kilowatts)
plot(householdpower$timestamp,householdpower$Global_active_power,
ylab="Global Active Power (kilowatts)",xlab=" ",pch=".")
lines(householdpower$timestamp,householdpower$Global_active_power, type="l")
#plot Voltage
plot(householdpower$timestamp,householdpower$Voltage,
ylab="Voltage",xlab=" ",pch=".")
lines(householdpower$timestamp,householdpower$Voltage, type="l")
#plot Energy Sub Metering
with(householdpower, plot(householdpower$timestamp, householdpower$Sub_metering_1, type = "n",
ylab="Energy Sub Metering",xlab=" "))
with(householdpower, lines(householdpower$timestamp, householdpower$Sub_metering_1, col = "black"))
with(householdpower, lines(householdpower$timestamp, householdpower$Sub_metering_2, col = "red"))
with(householdpower, lines(householdpower$timestamp, householdpower$Sub_metering_3, col = "blue"))
legend(x="topright",c("Sub_metering_1","Sub_metering_2","Sub_metering_3"),
cex=.5,lty=c(1,1), col=c("black","red","blue"),bty = "n")
#plot Global Reactive Power
plot(householdpower$timestamp,householdpower$Global_reactive_power,
ylab="Global Reactive Power",xlab=" Date Time ",pch=".")
lines(householdpower$timestamp,householdpower$Global_reactive_power, type="l")
dev.copy(png, file="plot4.png", width=480, height=480)
dev.off()
}
plot4()
nei_research <- function() {
#Have total emissions from PM2.5 decreased in the United States from 1999 to 2008?
#Using the base plotting system, make a plot showing the total PM2.5 emission from
#all sources for each of the years 1999, 2002, 2005, and 2008.
#read each of the two files using the readRDS() function in R.
#NEI <- readRDS("C:/DataScience/module 4/week3/project/summarySCC_PM25.rds")
#SCC <- readRDS("C:/DataScience/module 4/week3/project/Source_Classification_Code.rds")
NEI <- readRDS("summarySCC_PM25.rds")
SCC <- readRDS("Source_Classification_Code.rds")
head(NEI)
#head(SCC)
# Calculate total PM2.5 emissions by year
#totalEmissions <- tapply(NEI$Emissions, NEI$year, sum)
}
nei_research()
getWD()
getwd()
setwd("C:\Git\ExData_Plotting2")
setwd("C:/Git/ExData_Plotting2")
nei_research()
nei_research <- function() {
#Have total emissions from PM2.5 decreased in the United States from 1999 to 2008?
#Using the base plotting system, make a plot showing the total PM2.5 emission from
#all sources for each of the years 1999, 2002, 2005, and 2008.
#read each of the two files using the readRDS() function in R.
#NEI <- readRDS("C:/DataScience/module 4/week3/project/summarySCC_PM25.rds")
#SCC <- readRDS("C:/DataScience/module 4/week3/project/Source_Classification_Code.rds")
NEI <- readRDS("summarySCC_PM25.rds")
SCC <- readRDS("Source_Classification_Code.rds")
#head(NEI)
#head(SCC)
# Calculate total PM2.5 emissions by year
totalEmissions <- tapply(NEI$Emissions, NEI$year, sum)
head(totalEmissions)
}
nei_research()
nei_research <- function() {
#Have total emissions from PM2.5 decreased in the United States from 1999 to 2008?
#Using the base plotting system, make a plot showing the total PM2.5 emission from
#all sources for each of the years 1999, 2002, 2005, and 2008.
#read each of the two files using the readRDS() function in R.
#NEI <- readRDS("C:/DataScience/module 4/week3/project/summarySCC_PM25.rds")
#SCC <- readRDS("C:/DataScience/module 4/week3/project/Source_Classification_Code.rds")
NEI <- readRDS("summarySCC_PM25.rds")
SCC <- readRDS("Source_Classification_Code.rds")
#head(NEI)
#head(SCC)
# Calculate total PM2.5 emissions by year
totalEmissions <- tapply(NEI$Emissions, NEI$year, sum)
head(totalEmissions)
plot(totalEmissions,
ylab=" ",xlab=" ",pch=".")
lines(totalEmissions, type="l")
dev.copy(png, file="plot1.png", width=480, height=480)
dev.off()
}
nei_research()
